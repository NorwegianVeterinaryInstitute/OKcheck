% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_PJScodes.R
\name{count_PJScodes}
\alias{count_PJScodes}
\title{Count used PJS-codes}
\usage{
count_PJScodes(
  PJSdata,
  variable,
  accepted = NULL,
  excluded = NULL,
  translation_table = PJS_codes_2_text
)
}
\arguments{
\item{PJSdata}{[\code{data.frame}]\cr
Data from PJS.}

\item{variable}{[\code{character(1)}]\cr
The variable in the data that should be checked.}

\item{accepted}{[\code{character}]\cr
Vector with accepted code values. Defaults to \code{NULL}.}

\item{excluded}{[\code{character}]\cr
Vector with code values that should be excluded. Defaults to \code{NULL}.}

\item{translation_table}{[\code{data.frame}]\cr
The translation table for PJS-codes, see details.}
}
\value{
A data frame with the used codes, their description and the number of
    rows where the codes have been used.
}
\description{
Count used PJS-codes and marks whether they are accepted or not.
}
\details{
The purpose is to give an overview of the PJS-codes used. For codes
   at sak-level, the number of saker for which the codes have been used is
   given. For codes at metode-level, the number of undersokelser for which
   the codes have been used is given, etc. The identifying of the PJS-level
   is dependent on column being standardised, see
   \ifelse{html}{\code{\link[NVIdb:standardize_PJSdata]{NVIdb::standardize_PJSdata}}}{\code{NVIdb::standardize_PJSdata}}.

PJS-codes that are included in the control routines as accepted codes are marked.
   To facilitate checking if additional codes should be added to the list of
   selected or deleted codes, the description text is added to the used codes.
   This is under the condition that the PJSdata have standardised column names.

The \code{translation_table} for PJS-codes needs to be imported to add the
   description text. You may use
    \ifelse{html}{\code{\link[NVIdb:add_PJS_code_description]{NVIdb::read_PJS_code_2_text}}}{\code{NVIdb::read_PJS_code_2_text}}
   for this, see example.

The argument \code{accepted} accepts code values ending with "%" to include sub_levels.
}
\examples{
\dontrun{
# Reads translation table for PJS-codes
PJS_codes_2_text <- NVIdb::read_PJS_codes_2_text()

ktr <- count_PJScodes(PJSdata = PJSdata,
                      variable = "metodekode",
                      accepted = c("010001", "010002"),
                      translation_table = PJS_codes_2_text)
}

}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
