% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_ok_PJSdata.R
\name{check_ok_PJSdata}
\alias{check_ok_PJSdata}
\title{Checks the standard output data frame with the OK selection}
\usage{
check_ok_PJSdata(
  input = system.file("templates", "check_ok_PJSdata.Rmd", package = "OKcheck"),
  output_file = paste0("Kontroll av PJS-data for ", purpose, " ", format(Sys.Date(),
    "\%Y\%m\%d"), ".html"),
  output_dir = NULL,
  data = NULL,
  purpose = NULL,
  aar = as.numeric(format(Sys.Date(), "\%Y")) - 1,
  accept = "accept_always",
  display = "browser",
  ...
)
}
\arguments{
\item{input}{[\code{character(1)}]\cr
The path to the rmarkdown document with the checks.Defaults to
    "check_ok_PJSdata.Rmd" in the \code{OKplan}.}

\item{output_file}{[\code{character(1)}]\cr
The name of the output file.}

\item{output_dir}{[\code{character(1)}]\cr
The directory to save the output file. Defaults to \code{NULL}.}

\item{data}{[\code{data.frame}]\cr
The table with data describing the selection for a OK programme.}

\item{purpose}{[\code{character(1)}]\cr
String with descriptive text to be used in file name and heading of the report.}

\item{aar}{[\code{numeric(1)}]\cr
The year for which the selection is planned. Defaults to previous year.}

\item{accept}{[\code{character(1)}]\cr
How strict should the check of code combinations be. Defaults to
    "accept_always", i.e. the most strict check.}

\item{display}{[\code{logical(1)} | \code{character(1)}]\cr
Set "browser" for the default browser or "viewer" for the R studio
     viewer. \code{TRUE} equals "browser". If \code{FALSE}, don't display
     the results file. Defaults to "browser".}

\item{\dots}{Other arguments to be passed to
\ifelse{html}{\code{\link[NVIbatch:output_rendered]{NVIbatch::output_rendered}}}{\code{NVIbatch::output_rendered}}.}
}
\value{
Generates an html-file with the results of the checks to be displayed in the browser.
}
\description{
Standard checks of PJSdata by checking for illegal or rare
    combinations of values in variables in PJSdata.
    \code{check_ok_PJSdata} is a wrapper for
    \ifelse{html}{\code{\link[NVIbatch:output_rendered]{NVIbatch::output_rendered}}}{\code{NVIbatch::output_rendered}}.
}
\details{
Gives tables listing journals with mistakes, or probable mistakes.
    These should be further checked and eventually reported to the laboratory
    in charge of correcting the information in the journal.

The check must be performed on a data frame with standardised
    column names. This is ensured by using
    \ifelse{html}{\code{\link[OKplan:OK_column_standards]{data(OKplan::OK_column_standards)}}}{\code{data(OKplan::OK_column_standards)}}
    to standardise the column names.

The default behaviour is to display the resulting html-file in the
    browser. To save the result in a permanent file, use a permanent
    directory as input to \code{output_dir}. The resulting file
    can also be sent by email by using additional arguments, see
    \ifelse{html}{\code{\link[NVIbatch:output_rendered]{NVIbatch::output_rendered}}}{\code{NVIbatch::output_rendered}}.

If a check don't find any mistakes that should be reported, there is not
    produced any table for that check.
}
\examples{
\dontrun{
# Checking OK selection data

purpose = "ok_virus_svin"
aar = 2023
accept = "accept_always"

# Check
check_ok_PJSdata(data = PJSdata,
                 purpose = purpose,
                 aar = aar,
                 accept = accept)
}

}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
